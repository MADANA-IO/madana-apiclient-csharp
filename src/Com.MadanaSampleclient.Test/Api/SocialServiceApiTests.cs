/* 
 * madana-api
 *
 * <h1>API Quickstart Guide</h1>        <p>This documentation contains a Quickstart Guide, a few <a href=\"downloads.html\">sample clients</a>  for download and information about the available  <a href=\"resources.html\">endpoints</a>  and  <a href=\"data.html\">DataTypes</a>  </p>     <p>The <a target=\"_blank\" href=\"http://madana-explorer-staging.eu-central-1.elasticbeanstalk.com/login\">  MADANA Explorer</a> can be used to verify the interactions with the API</p>           <p>Internal use only. For more information visit <a href=\"https://www.madana.io\">www.madana.io</a></p>         <br> <br>
 *
 * The version of the OpenAPI document: 0.4.12
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Com.MadanaSampleclient.Client;
using Com.MadanaSampleclient.Api;

namespace Com.MadanaSampleclient.Test
{
    /// <summary>
    ///  Class for testing SocialServiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SocialServiceApiTests
    {
        private SocialServiceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SocialServiceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SocialServiceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' SocialServiceApi
            //Assert.IsInstanceOf(typeof(SocialServiceApi), instance);
        }

        
        /// <summary>
        /// Test GetMyProfile
        /// </summary>
        [Test]
        public void GetMyProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetMyProfile();
            //Assert.IsInstanceOf(typeof(System.IO.Stream), response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test GetPlatforms2
        /// </summary>
        [Test]
        public void GetPlatforms2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPlatforms2();
            //Assert.IsInstanceOf(typeof(System.IO.Stream), response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test GetRanking
        /// </summary>
        [Test]
        public void GetRankingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetRanking();
            //Assert.IsInstanceOf(typeof(System.IO.Stream), response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test GetSocialPlatformFeed
        /// </summary>
        [Test]
        public void GetSocialPlatformFeedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string platform = null;
            //var response = instance.GetSocialPlatformFeed(platform);
            //Assert.IsInstanceOf(typeof(System.IO.Stream), response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test GetUserProfile
        /// </summary>
        [Test]
        public void GetUserProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //string simple = null;
            //var response = instance.GetUserProfile(username, simple);
            //Assert.IsInstanceOf(typeof(System.IO.Stream), response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test GetUserProfile_0
        /// </summary>
        [Test]
        public void GetUserProfile_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //var response = instance.GetUserProfile_0(username);
            //Assert.IsInstanceOf(typeof(System.IO.Stream), response, "response is System.IO.Stream");
        }
        
    }

}

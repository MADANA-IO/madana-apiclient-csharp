/* 
 * madana-api
 *
 * <h1>API Quickstart Guide</h1>        <p>This documentation contains a Quickstart Guide, a few <a href=\"downloads.html\">sample clients</a>  for download and information about the available  <a href=\"resources.html\">endpoints</a>  and  <a href=\"data.html\">DataTypes</a>  </p>     <p>The <a target=\"_blank\" href=\"http://madana-explorer-staging.eu-central-1.elasticbeanstalk.com/login\">  MADANA Explorer</a> can be used to verify the interactions with the API</p>           <p>Internal use only. For more information visit <a href=\"https://www.madana.io\">www.madana.io</a></p>         <br> <br>
 *
 * The version of the OpenAPI document: 0.4.12
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using Com.MadanaSampleclient.Client;
using Com.MadanaSampleclient.Model;

namespace Com.MadanaSampleclient.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IAccountServiceApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="token"></param>
        /// <returns>System.IO.Stream</returns>
        System.IO.Stream ActivateUser (string token);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="token"></param>
        /// <returns>ApiResponse of System.IO.Stream</returns>
        ApiResponse<System.IO.Stream> ActivateUserWithHttpInfo (string token);
        /// <summary>
        /// Sends an Password reset mail to the given MailAddress.
        /// </summary>
        /// <remarks>
        /// Sends an Password reset mail to the given MailAddress
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MaiAddress under which the user has signed up (optional)</param>
        /// <returns>System.IO.Stream</returns>
        System.IO.Stream CreateObject (JsonMDNMailAddress body = default(JsonMDNMailAddress));

        /// <summary>
        /// Sends an Password reset mail to the given MailAddress.
        /// </summary>
        /// <remarks>
        /// Sends an Password reset mail to the given MailAddress
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MaiAddress under which the user has signed up (optional)</param>
        /// <returns>ApiResponse of System.IO.Stream</returns>
        ApiResponse<System.IO.Stream> CreateObjectWithHttpInfo (JsonMDNMailAddress body = default(JsonMDNMailAddress));
        /// <summary>
        /// Used to request a new  activation-mail for the user.
        /// </summary>
        /// <remarks>
        /// Used to request a new  activation-mail for the user
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Dictionary&lt;string, Object&gt;</returns>
        Dictionary<string, Object> RequestVerificationMail ();

        /// <summary>
        /// Used to request a new  activation-mail for the user.
        /// </summary>
        /// <remarks>
        /// Used to request a new  activation-mail for the user
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Dictionary&lt;string, Object&gt;</returns>
        ApiResponse<Dictionary<string, Object>> RequestVerificationMailWithHttpInfo ();
        /// <summary>
        /// Receives the Password reset and tries to set the provided password for the user.
        /// </summary>
        /// <remarks>
        /// Receives the Password reset and tries to set the provided password for the user. The Password will only be set if a valid token is provided
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MDN_PasswordReset Object (optional)</param>
        /// <returns>System.IO.Stream</returns>
        System.IO.Stream UpdateObject (JsonMDNPasswordReset body = default(JsonMDNPasswordReset));

        /// <summary>
        /// Receives the Password reset and tries to set the provided password for the user.
        /// </summary>
        /// <remarks>
        /// Receives the Password reset and tries to set the provided password for the user. The Password will only be set if a valid token is provided
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MDN_PasswordReset Object (optional)</param>
        /// <returns>ApiResponse of System.IO.Stream</returns>
        ApiResponse<System.IO.Stream> UpdateObjectWithHttpInfo (JsonMDNPasswordReset body = default(JsonMDNPasswordReset));
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="token"></param>
        /// <returns>Task of System.IO.Stream</returns>
        System.Threading.Tasks.Task<System.IO.Stream> ActivateUserAsync (string token);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="token"></param>
        /// <returns>Task of ApiResponse (System.IO.Stream)</returns>
        System.Threading.Tasks.Task<ApiResponse<System.IO.Stream>> ActivateUserAsyncWithHttpInfo (string token);
        /// <summary>
        /// Sends an Password reset mail to the given MailAddress.
        /// </summary>
        /// <remarks>
        /// Sends an Password reset mail to the given MailAddress
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MaiAddress under which the user has signed up (optional)</param>
        /// <returns>Task of System.IO.Stream</returns>
        System.Threading.Tasks.Task<System.IO.Stream> CreateObjectAsync (JsonMDNMailAddress body = default(JsonMDNMailAddress));

        /// <summary>
        /// Sends an Password reset mail to the given MailAddress.
        /// </summary>
        /// <remarks>
        /// Sends an Password reset mail to the given MailAddress
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MaiAddress under which the user has signed up (optional)</param>
        /// <returns>Task of ApiResponse (System.IO.Stream)</returns>
        System.Threading.Tasks.Task<ApiResponse<System.IO.Stream>> CreateObjectAsyncWithHttpInfo (JsonMDNMailAddress body = default(JsonMDNMailAddress));
        /// <summary>
        /// Used to request a new  activation-mail for the user.
        /// </summary>
        /// <remarks>
        /// Used to request a new  activation-mail for the user
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of Dictionary&lt;string, Object&gt;</returns>
        System.Threading.Tasks.Task<Dictionary<string, Object>> RequestVerificationMailAsync ();

        /// <summary>
        /// Used to request a new  activation-mail for the user.
        /// </summary>
        /// <remarks>
        /// Used to request a new  activation-mail for the user
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, Object&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Dictionary<string, Object>>> RequestVerificationMailAsyncWithHttpInfo ();
        /// <summary>
        /// Receives the Password reset and tries to set the provided password for the user.
        /// </summary>
        /// <remarks>
        /// Receives the Password reset and tries to set the provided password for the user. The Password will only be set if a valid token is provided
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MDN_PasswordReset Object (optional)</param>
        /// <returns>Task of System.IO.Stream</returns>
        System.Threading.Tasks.Task<System.IO.Stream> UpdateObjectAsync (JsonMDNPasswordReset body = default(JsonMDNPasswordReset));

        /// <summary>
        /// Receives the Password reset and tries to set the provided password for the user.
        /// </summary>
        /// <remarks>
        /// Receives the Password reset and tries to set the provided password for the user. The Password will only be set if a valid token is provided
        /// </remarks>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MDN_PasswordReset Object (optional)</param>
        /// <returns>Task of ApiResponse (System.IO.Stream)</returns>
        System.Threading.Tasks.Task<ApiResponse<System.IO.Stream>> UpdateObjectAsyncWithHttpInfo (JsonMDNPasswordReset body = default(JsonMDNPasswordReset));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class AccountServiceApi : IAccountServiceApi
    {
        private Com.MadanaSampleclient.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="AccountServiceApi"/> class.
        /// </summary>
        /// <returns></returns>
        public AccountServiceApi(String basePath)
        {
            this.Configuration = new Com.MadanaSampleclient.Client.Configuration { BasePath = basePath };

            ExceptionFactory = Com.MadanaSampleclient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AccountServiceApi"/> class
        /// </summary>
        /// <returns></returns>
        public AccountServiceApi()
        {
            this.Configuration = Com.MadanaSampleclient.Client.Configuration.Default;

            ExceptionFactory = Com.MadanaSampleclient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AccountServiceApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public AccountServiceApi(Com.MadanaSampleclient.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = Com.MadanaSampleclient.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = Com.MadanaSampleclient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Com.MadanaSampleclient.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Com.MadanaSampleclient.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="token"></param>
        /// <returns>System.IO.Stream</returns>
        public System.IO.Stream ActivateUser (string token)
        {
             ApiResponse<System.IO.Stream> localVarResponse = ActivateUserWithHttpInfo(token);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="token"></param>
        /// <returns>ApiResponse of System.IO.Stream</returns>
        public ApiResponse<System.IO.Stream> ActivateUserWithHttpInfo (string token)
        {
            // verify the required parameter 'token' is set
            if (token == null)
                throw new ApiException(400, "Missing required parameter 'token' when calling AccountServiceApi->ActivateUser");

            var localVarPath = "/account/activation/{token}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (token != null) localVarPathParams.Add("token", this.Configuration.ApiClient.ParameterToString(token)); // path parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ActivateUser", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<System.IO.Stream>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (System.IO.Stream) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(System.IO.Stream)));
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="token"></param>
        /// <returns>Task of System.IO.Stream</returns>
        public async System.Threading.Tasks.Task<System.IO.Stream> ActivateUserAsync (string token)
        {
             ApiResponse<System.IO.Stream> localVarResponse = await ActivateUserAsyncWithHttpInfo(token);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="token"></param>
        /// <returns>Task of ApiResponse (System.IO.Stream)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<System.IO.Stream>> ActivateUserAsyncWithHttpInfo (string token)
        {
            // verify the required parameter 'token' is set
            if (token == null)
                throw new ApiException(400, "Missing required parameter 'token' when calling AccountServiceApi->ActivateUser");

            var localVarPath = "/account/activation/{token}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (token != null) localVarPathParams.Add("token", this.Configuration.ApiClient.ParameterToString(token)); // path parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ActivateUser", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<System.IO.Stream>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (System.IO.Stream) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(System.IO.Stream)));
        }

        /// <summary>
        /// Sends an Password reset mail to the given MailAddress. Sends an Password reset mail to the given MailAddress
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MaiAddress under which the user has signed up (optional)</param>
        /// <returns>System.IO.Stream</returns>
        public System.IO.Stream CreateObject (JsonMDNMailAddress body = default(JsonMDNMailAddress))
        {
             ApiResponse<System.IO.Stream> localVarResponse = CreateObjectWithHttpInfo(body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Sends an Password reset mail to the given MailAddress. Sends an Password reset mail to the given MailAddress
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MaiAddress under which the user has signed up (optional)</param>
        /// <returns>ApiResponse of System.IO.Stream</returns>
        public ApiResponse<System.IO.Stream> CreateObjectWithHttpInfo (JsonMDNMailAddress body = default(JsonMDNMailAddress))
        {

            var localVarPath = "/account/password";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<System.IO.Stream>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (System.IO.Stream) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(System.IO.Stream)));
        }

        /// <summary>
        /// Sends an Password reset mail to the given MailAddress. Sends an Password reset mail to the given MailAddress
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MaiAddress under which the user has signed up (optional)</param>
        /// <returns>Task of System.IO.Stream</returns>
        public async System.Threading.Tasks.Task<System.IO.Stream> CreateObjectAsync (JsonMDNMailAddress body = default(JsonMDNMailAddress))
        {
             ApiResponse<System.IO.Stream> localVarResponse = await CreateObjectAsyncWithHttpInfo(body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Sends an Password reset mail to the given MailAddress. Sends an Password reset mail to the given MailAddress
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MaiAddress under which the user has signed up (optional)</param>
        /// <returns>Task of ApiResponse (System.IO.Stream)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<System.IO.Stream>> CreateObjectAsyncWithHttpInfo (JsonMDNMailAddress body = default(JsonMDNMailAddress))
        {

            var localVarPath = "/account/password";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<System.IO.Stream>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (System.IO.Stream) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(System.IO.Stream)));
        }

        /// <summary>
        /// Used to request a new  activation-mail for the user. Used to request a new  activation-mail for the user
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Dictionary&lt;string, Object&gt;</returns>
        public Dictionary<string, Object> RequestVerificationMail ()
        {
             ApiResponse<Dictionary<string, Object>> localVarResponse = RequestVerificationMailWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// Used to request a new  activation-mail for the user. Used to request a new  activation-mail for the user
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Dictionary&lt;string, Object&gt;</returns>
        public ApiResponse<Dictionary<string, Object>> RequestVerificationMailWithHttpInfo ()
        {

            var localVarPath = "/account/verifymail";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);



            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RequestVerificationMail", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Dictionary<string, Object>>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Dictionary<string, Object>) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Dictionary<string, Object>)));
        }

        /// <summary>
        /// Used to request a new  activation-mail for the user. Used to request a new  activation-mail for the user
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of Dictionary&lt;string, Object&gt;</returns>
        public async System.Threading.Tasks.Task<Dictionary<string, Object>> RequestVerificationMailAsync ()
        {
             ApiResponse<Dictionary<string, Object>> localVarResponse = await RequestVerificationMailAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// Used to request a new  activation-mail for the user. Used to request a new  activation-mail for the user
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, Object&gt;)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Dictionary<string, Object>>> RequestVerificationMailAsyncWithHttpInfo ()
        {

            var localVarPath = "/account/verifymail";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);



            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RequestVerificationMail", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Dictionary<string, Object>>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (Dictionary<string, Object>) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Dictionary<string, Object>)));
        }

        /// <summary>
        /// Receives the Password reset and tries to set the provided password for the user. Receives the Password reset and tries to set the provided password for the user. The Password will only be set if a valid token is provided
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MDN_PasswordReset Object (optional)</param>
        /// <returns>System.IO.Stream</returns>
        public System.IO.Stream UpdateObject (JsonMDNPasswordReset body = default(JsonMDNPasswordReset))
        {
             ApiResponse<System.IO.Stream> localVarResponse = UpdateObjectWithHttpInfo(body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Receives the Password reset and tries to set the provided password for the user. Receives the Password reset and tries to set the provided password for the user. The Password will only be set if a valid token is provided
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MDN_PasswordReset Object (optional)</param>
        /// <returns>ApiResponse of System.IO.Stream</returns>
        public ApiResponse<System.IO.Stream> UpdateObjectWithHttpInfo (JsonMDNPasswordReset body = default(JsonMDNPasswordReset))
        {

            var localVarPath = "/account/password";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("UpdateObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<System.IO.Stream>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (System.IO.Stream) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(System.IO.Stream)));
        }

        /// <summary>
        /// Receives the Password reset and tries to set the provided password for the user. Receives the Password reset and tries to set the provided password for the user. The Password will only be set if a valid token is provided
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MDN_PasswordReset Object (optional)</param>
        /// <returns>Task of System.IO.Stream</returns>
        public async System.Threading.Tasks.Task<System.IO.Stream> UpdateObjectAsync (JsonMDNPasswordReset body = default(JsonMDNPasswordReset))
        {
             ApiResponse<System.IO.Stream> localVarResponse = await UpdateObjectAsyncWithHttpInfo(body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Receives the Password reset and tries to set the provided password for the user. Receives the Password reset and tries to set the provided password for the user. The Password will only be set if a valid token is provided
        /// </summary>
        /// <exception cref="Com.MadanaSampleclient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">- the MDN_PasswordReset Object (optional)</param>
        /// <returns>Task of ApiResponse (System.IO.Stream)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<System.IO.Stream>> UpdateObjectAsyncWithHttpInfo (JsonMDNPasswordReset body = default(JsonMDNPasswordReset))
        {

            var localVarPath = "/account/password";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "application/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("UpdateObject", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<System.IO.Stream>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (System.IO.Stream) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(System.IO.Stream)));
        }

    }
}
